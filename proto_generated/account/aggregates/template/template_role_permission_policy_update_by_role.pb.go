// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/account/aggregates/template/template_role_permission_policy_update_by_role.proto

package prototemplate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	grpc "vl-account/proto_generated/common/grpc"
	messaging "vl-account/proto_generated/common/messaging"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TemplateRolePermissionPolicyUpdateByRoleRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateRoleId      uint64   `protobuf:"varint,1,opt,name=template_role_id,json=templateRoleId,proto3" json:"template_role_id,omitempty"`
	PermissionPolicyIds []uint64 `protobuf:"varint,2,rep,packed,name=permission_policy_ids,json=permissionPolicyIds,proto3" json:"permission_policy_ids,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequestData) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleRequestData) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleRequestData.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleRequestData) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{0}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequestData) GetTemplateRoleId() uint64 {
	if x != nil {
		return x.TemplateRoleId
	}
	return 0
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequestData) GetPermissionPolicyIds() []uint64 {
	if x != nil {
		return x.PermissionPolicyIds
	}
	return nil
}

type TemplateRolePermissionPolicyUpdateByRoleResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateRoleId uint64 `protobuf:"varint,1,opt,name=template_role_id,json=templateRoleId,proto3" json:"template_role_id,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponseData) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleResponseData) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleResponseData.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleResponseData) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{1}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponseData) GetTemplateRoleId() uint64 {
	if x != nil {
		return x.TemplateRoleId
	}
	return 0
}

type TemplateRolePermissionPolicyUpdateByRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *grpc.GRPCRequest                                    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data *TemplateRolePermissionPolicyUpdateByRoleRequestData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequest) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleRequest) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleRequest.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{2}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequest) GetBase() *grpc.GRPCRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleRequest) GetData() *TemplateRolePermissionPolicyUpdateByRoleRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemplateRolePermissionPolicyUpdateByRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *grpc.GRPCResponse                                    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data *TemplateRolePermissionPolicyUpdateByRoleResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponse) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleResponse) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleResponse.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{3}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponse) GetBase() *grpc.GRPCResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleResponse) GetData() *TemplateRolePermissionPolicyUpdateByRoleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction                               `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Client      *messaging.Client                                    `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Data        *TemplateRolePermissionPolicyUpdateByRoleRequestData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{4}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) GetClient() *messaging.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest) GetData() *TemplateRolePermissionPolicyUpdateByRoleRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction                                `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Error       *messaging.Error                                      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data        *TemplateRolePermissionPolicyUpdateByRoleResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{5}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) GetError() *messaging.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse) GetData() *TemplateRolePermissionPolicyUpdateByRoleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemplateRolePermissionPolicyUpdateByRoleCQRSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction                               `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Client      *messaging.Client                                    `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Data        *TemplateRolePermissionPolicyUpdateByRoleRequestData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleCQRSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleCQRSRequest.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{6}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) GetClient() *messaging.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSRequest) GetData() *TemplateRolePermissionPolicyUpdateByRoleRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemplateRolePermissionPolicyUpdateByRoleCQRSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction          `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Error       *messaging.Error                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data        []*TemplateRolePermissionPolicy `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) Reset() {
	*x = TemplateRolePermissionPolicyUpdateByRoleCQRSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) ProtoMessage() {}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRolePermissionPolicyUpdateByRoleCQRSResponse.ProtoReflect.Descriptor instead.
func (*TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP(), []int{7}
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) GetError() *messaging.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TemplateRolePermissionPolicyUpdateByRoleCQRSResponse) GetData() []*TemplateRolePermissionPolicy {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto protoreflect.FileDescriptor

var file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDesc = []byte{
	0x0a, 0x56, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x47, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x33, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x34, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a,
	0x2f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52, 0x50,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xc8, 0x01, 0x0a, 0x30, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x91, 0x02, 0x0a, 0x36, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x90, 0x02, 0x0a, 0x37, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x65, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x02, 0x0a, 0x33, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x43, 0x51, 0x52, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x64, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x50, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf5, 0x01, 0x0a, 0x34, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x51, 0x52, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x47, 0x5a, 0x45, 0x76, 0x6c, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescOnce sync.Once
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescData = file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDesc
)

func file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescGZIP() []byte {
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescOnce.Do(func() {
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescData)
	})
	return file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDescData
}

var file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_goTypes = []interface{}{
	(*TemplateRolePermissionPolicyUpdateByRoleRequestData)(nil),     // 0: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequestData
	(*TemplateRolePermissionPolicyUpdateByRoleResponseData)(nil),    // 1: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleResponseData
	(*TemplateRolePermissionPolicyUpdateByRoleRequest)(nil),         // 2: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequest
	(*TemplateRolePermissionPolicyUpdateByRoleResponse)(nil),        // 3: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleResponse
	(*TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest)(nil),  // 4: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest
	(*TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse)(nil), // 5: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse
	(*TemplateRolePermissionPolicyUpdateByRoleCQRSRequest)(nil),     // 6: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSRequest
	(*TemplateRolePermissionPolicyUpdateByRoleCQRSResponse)(nil),    // 7: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSResponse
	(*grpc.GRPCRequest)(nil),                                        // 8: common.grpc.GRPCRequest
	(*grpc.GRPCResponse)(nil),                                       // 9: common.grpc.GRPCResponse
	(*messaging.Transaction)(nil),                                   // 10: common.messaging.Transaction
	(*messaging.Client)(nil),                                        // 11: common.messaging.Client
	(*messaging.Error)(nil),                                         // 12: common.messaging.Error
	(*TemplateRolePermissionPolicy)(nil),                            // 13: account.aggregates.template.TemplateRolePermissionPolicy
}
var file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_depIdxs = []int32{
	8,  // 0: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequest.base:type_name -> common.grpc.GRPCRequest
	0,  // 1: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequest.data:type_name -> account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequestData
	9,  // 2: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleResponse.base:type_name -> common.grpc.GRPCResponse
	1,  // 3: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleResponse.data:type_name -> account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleResponseData
	10, // 4: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest.transaction:type_name -> common.messaging.Transaction
	11, // 5: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest.client:type_name -> common.messaging.Client
	0,  // 6: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest.data:type_name -> account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequestData
	10, // 7: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse.transaction:type_name -> common.messaging.Transaction
	12, // 8: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse.error:type_name -> common.messaging.Error
	1,  // 9: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse.data:type_name -> account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleResponseData
	10, // 10: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSRequest.transaction:type_name -> common.messaging.Transaction
	11, // 11: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSRequest.client:type_name -> common.messaging.Client
	0,  // 12: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSRequest.data:type_name -> account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleRequestData
	10, // 13: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSResponse.transaction:type_name -> common.messaging.Transaction
	12, // 14: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSResponse.error:type_name -> common.messaging.Error
	13, // 15: account.aggregates.template.TemplateRolePermissionPolicyUpdateByRoleCQRSResponse.data:type_name -> account.aggregates.template.TemplateRolePermissionPolicy
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() {
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_init()
}
func file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_init() {
	if File_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto != nil {
		return
	}
	file_proto_account_aggregates_template_template_role_permission_policy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleUseCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleUseCaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleCQRSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRolePermissionPolicyUpdateByRoleCQRSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_goTypes,
		DependencyIndexes: file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_depIdxs,
		MessageInfos:      file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_msgTypes,
	}.Build()
	File_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto = out.File
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_rawDesc = nil
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_goTypes = nil
	file_proto_account_aggregates_template_template_role_permission_policy_update_by_role_proto_depIdxs = nil
}
