// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: proto/account/aggregates/permission/template_organizational_role_service.proto

package protopermission

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	grpc1 "vl-account/proto_generated/account/aggregates/permission/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TemplateOrganizationalRoleService_List_FullMethodName   = "/account.aggregates.permission.TemplateOrganizationalRoleService/List"
	TemplateOrganizationalRoleService_Get_FullMethodName    = "/account.aggregates.permission.TemplateOrganizationalRoleService/Get"
	TemplateOrganizationalRoleService_Delete_FullMethodName = "/account.aggregates.permission.TemplateOrganizationalRoleService/Delete"
	TemplateOrganizationalRoleService_Create_FullMethodName = "/account.aggregates.permission.TemplateOrganizationalRoleService/Create"
	TemplateOrganizationalRoleService_Update_FullMethodName = "/account.aggregates.permission.TemplateOrganizationalRoleService/Update"
)

// TemplateOrganizationalRoleServiceClient is the client API for TemplateOrganizationalRoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TemplateOrganizationalRoleServiceClient interface {
	List(ctx context.Context, in *grpc1.TemplateOrganizationalRoleListRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleListResponse, error)
	Get(ctx context.Context, in *grpc1.TemplateOrganizationalRoleGetRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleGetResponse, error)
	Delete(ctx context.Context, in *grpc1.TemplateOrganizationalRoleDeleteRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleDeleteResponse, error)
	Create(ctx context.Context, in *grpc1.TemplateOrganizationalRoleCreateRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleCreateResponse, error)
	Update(ctx context.Context, in *grpc1.TemplateOrganizationalRoleUpdateRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleUpdateResponse, error)
}

type templateOrganizationalRoleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTemplateOrganizationalRoleServiceClient(cc grpc.ClientConnInterface) TemplateOrganizationalRoleServiceClient {
	return &templateOrganizationalRoleServiceClient{cc}
}

func (c *templateOrganizationalRoleServiceClient) List(ctx context.Context, in *grpc1.TemplateOrganizationalRoleListRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleListResponse, error) {
	out := new(grpc1.TemplateOrganizationalRoleListResponse)
	err := c.cc.Invoke(ctx, TemplateOrganizationalRoleService_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateOrganizationalRoleServiceClient) Get(ctx context.Context, in *grpc1.TemplateOrganizationalRoleGetRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleGetResponse, error) {
	out := new(grpc1.TemplateOrganizationalRoleGetResponse)
	err := c.cc.Invoke(ctx, TemplateOrganizationalRoleService_Get_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateOrganizationalRoleServiceClient) Delete(ctx context.Context, in *grpc1.TemplateOrganizationalRoleDeleteRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleDeleteResponse, error) {
	out := new(grpc1.TemplateOrganizationalRoleDeleteResponse)
	err := c.cc.Invoke(ctx, TemplateOrganizationalRoleService_Delete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateOrganizationalRoleServiceClient) Create(ctx context.Context, in *grpc1.TemplateOrganizationalRoleCreateRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleCreateResponse, error) {
	out := new(grpc1.TemplateOrganizationalRoleCreateResponse)
	err := c.cc.Invoke(ctx, TemplateOrganizationalRoleService_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateOrganizationalRoleServiceClient) Update(ctx context.Context, in *grpc1.TemplateOrganizationalRoleUpdateRequest, opts ...grpc.CallOption) (*grpc1.TemplateOrganizationalRoleUpdateResponse, error) {
	out := new(grpc1.TemplateOrganizationalRoleUpdateResponse)
	err := c.cc.Invoke(ctx, TemplateOrganizationalRoleService_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TemplateOrganizationalRoleServiceServer is the server API for TemplateOrganizationalRoleService service.
// All implementations must embed UnimplementedTemplateOrganizationalRoleServiceServer
// for forward compatibility
type TemplateOrganizationalRoleServiceServer interface {
	List(context.Context, *grpc1.TemplateOrganizationalRoleListRequest) (*grpc1.TemplateOrganizationalRoleListResponse, error)
	Get(context.Context, *grpc1.TemplateOrganizationalRoleGetRequest) (*grpc1.TemplateOrganizationalRoleGetResponse, error)
	Delete(context.Context, *grpc1.TemplateOrganizationalRoleDeleteRequest) (*grpc1.TemplateOrganizationalRoleDeleteResponse, error)
	Create(context.Context, *grpc1.TemplateOrganizationalRoleCreateRequest) (*grpc1.TemplateOrganizationalRoleCreateResponse, error)
	Update(context.Context, *grpc1.TemplateOrganizationalRoleUpdateRequest) (*grpc1.TemplateOrganizationalRoleUpdateResponse, error)
	mustEmbedUnimplementedTemplateOrganizationalRoleServiceServer()
}

// UnimplementedTemplateOrganizationalRoleServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTemplateOrganizationalRoleServiceServer struct {
}

func (UnimplementedTemplateOrganizationalRoleServiceServer) List(context.Context, *grpc1.TemplateOrganizationalRoleListRequest) (*grpc1.TemplateOrganizationalRoleListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedTemplateOrganizationalRoleServiceServer) Get(context.Context, *grpc1.TemplateOrganizationalRoleGetRequest) (*grpc1.TemplateOrganizationalRoleGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedTemplateOrganizationalRoleServiceServer) Delete(context.Context, *grpc1.TemplateOrganizationalRoleDeleteRequest) (*grpc1.TemplateOrganizationalRoleDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedTemplateOrganizationalRoleServiceServer) Create(context.Context, *grpc1.TemplateOrganizationalRoleCreateRequest) (*grpc1.TemplateOrganizationalRoleCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedTemplateOrganizationalRoleServiceServer) Update(context.Context, *grpc1.TemplateOrganizationalRoleUpdateRequest) (*grpc1.TemplateOrganizationalRoleUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedTemplateOrganizationalRoleServiceServer) mustEmbedUnimplementedTemplateOrganizationalRoleServiceServer() {
}

// UnsafeTemplateOrganizationalRoleServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TemplateOrganizationalRoleServiceServer will
// result in compilation errors.
type UnsafeTemplateOrganizationalRoleServiceServer interface {
	mustEmbedUnimplementedTemplateOrganizationalRoleServiceServer()
}

func RegisterTemplateOrganizationalRoleServiceServer(s grpc.ServiceRegistrar, srv TemplateOrganizationalRoleServiceServer) {
	s.RegisterService(&TemplateOrganizationalRoleService_ServiceDesc, srv)
}

func _TemplateOrganizationalRoleService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc1.TemplateOrganizationalRoleListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateOrganizationalRoleServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TemplateOrganizationalRoleService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateOrganizationalRoleServiceServer).List(ctx, req.(*grpc1.TemplateOrganizationalRoleListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateOrganizationalRoleService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc1.TemplateOrganizationalRoleGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateOrganizationalRoleServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TemplateOrganizationalRoleService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateOrganizationalRoleServiceServer).Get(ctx, req.(*grpc1.TemplateOrganizationalRoleGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateOrganizationalRoleService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc1.TemplateOrganizationalRoleDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateOrganizationalRoleServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TemplateOrganizationalRoleService_Delete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateOrganizationalRoleServiceServer).Delete(ctx, req.(*grpc1.TemplateOrganizationalRoleDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateOrganizationalRoleService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc1.TemplateOrganizationalRoleCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateOrganizationalRoleServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TemplateOrganizationalRoleService_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateOrganizationalRoleServiceServer).Create(ctx, req.(*grpc1.TemplateOrganizationalRoleCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateOrganizationalRoleService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc1.TemplateOrganizationalRoleUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateOrganizationalRoleServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TemplateOrganizationalRoleService_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateOrganizationalRoleServiceServer).Update(ctx, req.(*grpc1.TemplateOrganizationalRoleUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TemplateOrganizationalRoleService_ServiceDesc is the grpc.ServiceDesc for TemplateOrganizationalRoleService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TemplateOrganizationalRoleService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "account.aggregates.permission.TemplateOrganizationalRoleService",
	HandlerType: (*TemplateOrganizationalRoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _TemplateOrganizationalRoleService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TemplateOrganizationalRoleService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TemplateOrganizationalRoleService_Delete_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _TemplateOrganizationalRoleService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TemplateOrganizationalRoleService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/account/aggregates/permission/template_organizational_role_service.proto",
}
