// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/general_info/aggregates/personal_setting/bookmark_query.proto

package protopersonalsetting

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	grpc "vl-account/proto_generated/common/grpc"
	messaging "vl-account/proto_generated/common/messaging"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookMarkGetByUserIDRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *BookMarkGetByUserIDRequestData) Reset() {
	*x = BookMarkGetByUserIDRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDRequestData) ProtoMessage() {}

func (x *BookMarkGetByUserIDRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDRequestData.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDRequestData) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{0}
}

func (x *BookMarkGetByUserIDRequestData) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type BookMarkGetByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *grpc.GRPCRequest               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data *BookMarkGetByUserIDRequestData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookMarkGetByUserIDRequest) Reset() {
	*x = BookMarkGetByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDRequest) ProtoMessage() {}

func (x *BookMarkGetByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDRequest.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{1}
}

func (x *BookMarkGetByUserIDRequest) GetBase() *grpc.GRPCRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *BookMarkGetByUserIDRequest) GetData() *BookMarkGetByUserIDRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookMarkGetByUserIDResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmarks []*Bookmark `protobuf:"bytes,1,rep,name=bookmarks,proto3" json:"bookmarks,omitempty"`
}

func (x *BookMarkGetByUserIDResponseData) Reset() {
	*x = BookMarkGetByUserIDResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDResponseData) ProtoMessage() {}

func (x *BookMarkGetByUserIDResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDResponseData.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDResponseData) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{2}
}

func (x *BookMarkGetByUserIDResponseData) GetBookmarks() []*Bookmark {
	if x != nil {
		return x.Bookmarks
	}
	return nil
}

type BookMarkGetByUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *grpc.GRPCResponse               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data *BookMarkGetByUserIDResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookMarkGetByUserIDResponse) Reset() {
	*x = BookMarkGetByUserIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDResponse) ProtoMessage() {}

func (x *BookMarkGetByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDResponse.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{3}
}

func (x *BookMarkGetByUserIDResponse) GetBase() *grpc.GRPCResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *BookMarkGetByUserIDResponse) GetData() *BookMarkGetByUserIDResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookMarkGetByUserIDUseCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction          `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Client      *messaging.Client               `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Data        *BookMarkGetByUserIDRequestData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookMarkGetByUserIDUseCaseRequest) Reset() {
	*x = BookMarkGetByUserIDUseCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDUseCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDUseCaseRequest) ProtoMessage() {}

func (x *BookMarkGetByUserIDUseCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDUseCaseRequest.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDUseCaseRequest) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{4}
}

func (x *BookMarkGetByUserIDUseCaseRequest) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *BookMarkGetByUserIDUseCaseRequest) GetClient() *messaging.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BookMarkGetByUserIDUseCaseRequest) GetData() *BookMarkGetByUserIDRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookMarkGetByUserIDUseCaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Error       *messaging.Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data        *BookMarkGetByUserIDResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookMarkGetByUserIDUseCaseResponse) Reset() {
	*x = BookMarkGetByUserIDUseCaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDUseCaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDUseCaseResponse) ProtoMessage() {}

func (x *BookMarkGetByUserIDUseCaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDUseCaseResponse.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDUseCaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{5}
}

func (x *BookMarkGetByUserIDUseCaseResponse) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *BookMarkGetByUserIDUseCaseResponse) GetError() *messaging.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BookMarkGetByUserIDUseCaseResponse) GetData() *BookMarkGetByUserIDResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookMarkGetByUserIDCQRSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Client      *messaging.Client                `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Data        *BookMarkGetByUserIDResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookMarkGetByUserIDCQRSRequest) Reset() {
	*x = BookMarkGetByUserIDCQRSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDCQRSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDCQRSRequest) ProtoMessage() {}

func (x *BookMarkGetByUserIDCQRSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDCQRSRequest.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDCQRSRequest) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{6}
}

func (x *BookMarkGetByUserIDCQRSRequest) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *BookMarkGetByUserIDCQRSRequest) GetClient() *messaging.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BookMarkGetByUserIDCQRSRequest) GetData() *BookMarkGetByUserIDResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookMarkGetByUserIDQRSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *messaging.Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Error       *messaging.Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data        *BookMarkGetByUserIDResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookMarkGetByUserIDQRSResponse) Reset() {
	*x = BookMarkGetByUserIDQRSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMarkGetByUserIDQRSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMarkGetByUserIDQRSResponse) ProtoMessage() {}

func (x *BookMarkGetByUserIDQRSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMarkGetByUserIDQRSResponse.ProtoReflect.Descriptor instead.
func (*BookMarkGetByUserIDQRSResponse) Descriptor() ([]byte, []int) {
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP(), []int{7}
}

func (x *BookMarkGetByUserIDQRSResponse) GetTransaction() *messaging.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *BookMarkGetByUserIDQRSResponse) GetError() *messaging.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BookMarkGetByUserIDQRSResponse) GetData() *BookMarkGetByUserIDResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_general_info_aggregates_personal_setting_bookmark_query_proto protoreflect.FileDescriptor

var file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDesc = []byte{
	0x0a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a,
	0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x1e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xa8, 0x01, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x1f, 0x42, 0x6f,
	0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22,
	0xab, 0x01, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52, 0x50, 0x43,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf4, 0x01,
	0x0a, 0x21, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xf3, 0x01, 0x0a, 0x22, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72,
	0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x55, 0x73, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf2, 0x01, 0x0a, 0x1e, 0x42,
	0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x43, 0x51, 0x52, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x5d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61,
	0x72, 0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xef, 0x01, 0x0a, 0x1e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x51, 0x52, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x5d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x49, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x4d, 0x61, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x5a, 0x5a, 0x58, 0x76, 0x6c, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescOnce sync.Once
	file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescData = file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDesc
)

func file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescGZIP() []byte {
	file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescOnce.Do(func() {
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescData)
	})
	return file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDescData
}

var file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_goTypes = []interface{}{
	(*BookMarkGetByUserIDRequestData)(nil),     // 0: general_info.aggregates.personal_setting.BookMarkGetByUserIDRequestData
	(*BookMarkGetByUserIDRequest)(nil),         // 1: general_info.aggregates.personal_setting.BookMarkGetByUserIDRequest
	(*BookMarkGetByUserIDResponseData)(nil),    // 2: general_info.aggregates.personal_setting.BookMarkGetByUserIDResponseData
	(*BookMarkGetByUserIDResponse)(nil),        // 3: general_info.aggregates.personal_setting.BookMarkGetByUserIDResponse
	(*BookMarkGetByUserIDUseCaseRequest)(nil),  // 4: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseRequest
	(*BookMarkGetByUserIDUseCaseResponse)(nil), // 5: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseResponse
	(*BookMarkGetByUserIDCQRSRequest)(nil),     // 6: general_info.aggregates.personal_setting.BookMarkGetByUserIDCQRSRequest
	(*BookMarkGetByUserIDQRSResponse)(nil),     // 7: general_info.aggregates.personal_setting.BookMarkGetByUserIDQRSResponse
	(*grpc.GRPCRequest)(nil),                   // 8: common.grpc.GRPCRequest
	(*Bookmark)(nil),                           // 9: general_info.aggregates.personal_setting.Bookmark
	(*grpc.GRPCResponse)(nil),                  // 10: common.grpc.GRPCResponse
	(*messaging.Transaction)(nil),              // 11: common.messaging.Transaction
	(*messaging.Client)(nil),                   // 12: common.messaging.Client
	(*messaging.Error)(nil),                    // 13: common.messaging.Error
}
var file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_depIdxs = []int32{
	8,  // 0: general_info.aggregates.personal_setting.BookMarkGetByUserIDRequest.base:type_name -> common.grpc.GRPCRequest
	0,  // 1: general_info.aggregates.personal_setting.BookMarkGetByUserIDRequest.data:type_name -> general_info.aggregates.personal_setting.BookMarkGetByUserIDRequestData
	9,  // 2: general_info.aggregates.personal_setting.BookMarkGetByUserIDResponseData.bookmarks:type_name -> general_info.aggregates.personal_setting.Bookmark
	10, // 3: general_info.aggregates.personal_setting.BookMarkGetByUserIDResponse.base:type_name -> common.grpc.GRPCResponse
	2,  // 4: general_info.aggregates.personal_setting.BookMarkGetByUserIDResponse.data:type_name -> general_info.aggregates.personal_setting.BookMarkGetByUserIDResponseData
	11, // 5: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseRequest.transaction:type_name -> common.messaging.Transaction
	12, // 6: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseRequest.client:type_name -> common.messaging.Client
	0,  // 7: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseRequest.data:type_name -> general_info.aggregates.personal_setting.BookMarkGetByUserIDRequestData
	11, // 8: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseResponse.transaction:type_name -> common.messaging.Transaction
	13, // 9: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseResponse.error:type_name -> common.messaging.Error
	2,  // 10: general_info.aggregates.personal_setting.BookMarkGetByUserIDUseCaseResponse.data:type_name -> general_info.aggregates.personal_setting.BookMarkGetByUserIDResponseData
	11, // 11: general_info.aggregates.personal_setting.BookMarkGetByUserIDCQRSRequest.transaction:type_name -> common.messaging.Transaction
	12, // 12: general_info.aggregates.personal_setting.BookMarkGetByUserIDCQRSRequest.client:type_name -> common.messaging.Client
	2,  // 13: general_info.aggregates.personal_setting.BookMarkGetByUserIDCQRSRequest.data:type_name -> general_info.aggregates.personal_setting.BookMarkGetByUserIDResponseData
	11, // 14: general_info.aggregates.personal_setting.BookMarkGetByUserIDQRSResponse.transaction:type_name -> common.messaging.Transaction
	13, // 15: general_info.aggregates.personal_setting.BookMarkGetByUserIDQRSResponse.error:type_name -> common.messaging.Error
	2,  // 16: general_info.aggregates.personal_setting.BookMarkGetByUserIDQRSResponse.data:type_name -> general_info.aggregates.personal_setting.BookMarkGetByUserIDResponseData
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_init() }
func file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_init() {
	if File_proto_general_info_aggregates_personal_setting_bookmark_query_proto != nil {
		return
	}
	file_proto_general_info_aggregates_personal_setting_bookmark_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDUseCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDUseCaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDCQRSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMarkGetByUserIDQRSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_goTypes,
		DependencyIndexes: file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_depIdxs,
		MessageInfos:      file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_msgTypes,
	}.Build()
	File_proto_general_info_aggregates_personal_setting_bookmark_query_proto = out.File
	file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_rawDesc = nil
	file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_goTypes = nil
	file_proto_general_info_aggregates_personal_setting_bookmark_query_proto_depIdxs = nil
}
